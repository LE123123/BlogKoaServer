let Koa,Router,bodyParser,mongoose,createFakeData,api,jwtMiddleware;_483‍.w("koa",[["default",["Koa"],function(v){Koa=v}]]);_483‍.w("koa-router",[["default",["Router"],function(v){Router=v}]]);_483‍.w("koa-bodyparser",[["default",["bodyParser"],function(v){bodyParser=v}]]);_483‍.w("mongoose",[["default",["mongoose"],function(v){mongoose=v}]]);_483‍.w("./createFakeData",[["default",["createFakeData"],function(v){createFakeData=v}]]);_483‍.w("./api",[["default",["api"],function(v){api=v}]]);_483‍.w("./lib/jwtMiddleware",[["default",["jwtMiddleware"],function(v){jwtMiddleware=v}]]);/* eslint-disable no-undef */
require('dotenv').config();





const { PORT, MONGO_URI } = process.env;


mongoose
  .connect('mongodb://hyunseo:gustj486!!@localhost:27017', {
    dbName: 'blog',
  })
  .then(() => {
    console.log('Connected to MongoDB');
    // createFakeData();
  })
  .catch((e) => {
    _483‍.g.console.error(e);
  });




const app = new Koa();
const router = new Router();

router.use('/api', api.routes());

app.use(bodyParser());
app.use(jwtMiddleware);

app.use(router.routes()).use(router.allowedMethods());

const port = PORT || 4000;
app.listen(port, () => {
  console.log(`Listening to port ${port}`);
});
